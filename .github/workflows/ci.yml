name: CI

on:
  # on each push and manual trigger
  push:  
    branches: [ master ]
    paths-ignore: [ "**/Readme.md" ]
  workflow_dispatch:    

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        # currently stable="Lazarus 2.2.0 / FPC 3.2.2" with setup-lazarus@v3.0.16
        # also test one older version "2.0.10 - comes with FPC v3.2.0" 
        # minimum for macOS is 2.0.8 but that still crashes building "lazbuild --ws=cocoa" demos
        lazarus-versions: [stable, 2.0.10]        
    steps:
      - uses: actions/checkout@v2
      - name: Install Lazarus
        uses: gcarreno/setup-lazarus@v3.0.16
        with:
          lazarus-version: ${{ matrix.lazarus-versions }}          
      - name: Print Lazarus version
        run: lazbuild --version
      - name: Setup Linux
        if: runner.os == 'Linux'
        shell: bash                
        run:  |    
          # needed for SDL and GL demos
          sudo apt install libsdl1.2-dev -y
      - name: Build Demos 
        shell: bash        
        run:  |          
          cd Demos/ObjectPascal           
          
          lazbuild "Benchmark/Bench.lpi"    
          lazbuild "VampConvert/VampConvert.lpi"
                    
          if [ "$RUNNER_OS" != "macOS" ]; then                                 
              lazbuild "LCLImager/lclimager.lpi"          
              lazbuild "ImageBrowser/ImgBrowser.lpi"
              lazbuild "OpenGLDemo/OpenGLDemo.lpi"
              lazbuild "SDLDemo/SDLDemo.lpi" 
          fi
          
          if [ "$RUNNER_OS" == "macOS" ]; then
            lazbuild --ws=cocoa "LCLImager/lclimager.lpi"          
            lazbuild --ws=cocoa "ImageBrowser/ImgBrowser.lpi"
          fi
                    
          if [ "$RUNNER_OS" == "Windows" ]; then                                  
              lazbuild "D3DDemo/D3DDemo.lpi" 
          fi    
      - name: List Demos Bin directory
        shell: bash
        run:  ls Demos/Bin            
      - name:  Run tests
        shell: bash
        run:   |          
          cd Demos/Bin           
          ./Bench
          ./VampConvert -h           
      - uses: actions/upload-artifact@v2
        with:
          name: ci-artifacts-${{ matrix.operating-system }}-laz-${{ matrix.lazarus-versions }}
          # exclude compiled units etc.
          path: |
            Demos/Bin            
            !Demos/Bin/Dcu            
          if-no-files-found: error
